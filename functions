##
# Custom Functions
##################

tes() {
  [[ $@ ]]; echo $?
}

teso() {
  test $@; echo $?
}

jgrep() {
  cat $1 | jq $2
}

extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via extract()" ;;
       esac
   else
       echo "'$1' is not a valid file"
   fi
}

cvim() {
  cd $1; vim
}

npmrepo() {
  npm info $1 | grep github\.com | head -1 | grep -Eo '://github.com\/.*' | sed "s/\.git//;s/' },//;s/',//;s/#.*$//" | awk '{print "https"$1".git"}'
}

npgrep() {
  cat package.json | jq .$1
}

openl() { 
  open http://localhost:$1
}

gitclonenpm() {
  npmrepo $1 | xargs git clone
}

gitbrowsenpm() {
  npmrepo $1 | sed "s/.git$//" | xargs open
}

gitdelremotebranch() {
  git branch -D $1; git push origin :$1
}

gitdelremotetag() {
  git push origin :refs/tag/$1
}

ftpgetall() { 
  wget -r ftp://$1@$2/$3
}

ctagsproj() {
  if [ -d ./.git/ ] ; then
    ctags -R -f ./.git/.tags
  else
    ctags -R -f .tags
  fi
}

visnip() {
  vi $1.snippets
}

lsofi() {
  lsof -i :$1
}

fext() {
  ag -G .$1$ $2
}

dmenvset() {
  eval "$(docker-machine env $1)"
}

bbwatch() {
  babel --presets es2015,react --watch $1 --out-dir $2
}

bbwatch5() {
  babel --watch $1 --out-dir $2
}

browsersyncfiles() {
  browser-sync start --server --files "$1"
}

browsersyncproxy() {
  if [[ $2 =~ [0-9]+ ]]; then
    browser-sync start --proxy "$1:$2" --files "$3"
  else
    browser-sync start --proxy "$1" --files "$2"
  fi
}

if [ -f ~/.aliases.local ]; then
  . ~/.aliases.local
fi
